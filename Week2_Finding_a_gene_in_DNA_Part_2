
/**
 * Write a description of Part2 here.
 * This assignment will determine if a DNA strand has a gene in it by using the simplified algorithm from the lesson, but organizing the code in a slightly different way. You will modify the method findSimpleGene to have three parameters, one for the DNA string, one for the start codon and one for the stop codon.
 * @author (jkiseeva) 
 * @version (v2 August 09 2022)
 */

 
public class Part2 {
    
    public String findSimpleGene(String dna, String startCodon, String stopCodon){
        //start codon is "ATG"
        //stop codon is "TAA"
        String result = "";
        //Character.isUpperCase only works with CHARACTERS, not strings
        //That's why we are extracting the first character (0) of the string
        if(Character.isUpperCase(dna.charAt(0)) ) {
        
        startCodon = startCodon.toUpperCase();
        stopCodon = stopCodon.toUpperCase();
                
        } else{
        startCodon = startCodon.toLowerCase();
        stopCodon = stopCodon.toLowerCase();
        
        }

        //starting index begins at ATG    
        int startIndex = dna.indexOf(startCodon);        
        //if no ATG, then return ""
        if (startIndex == -1){
        return "";
        }
                
        // stopIndex begins at TAA + 3 because we want index to end until after the last A in TAA
        int stopIndex = dna.indexOf(stopCodon, startIndex+3);        
        //if no TAA, then return ""
        
        if (stopIndex == -1) {
        return "";
        }     
            
        //result is the substring of everything beginning with startIndex ATG
        //ending with stopIndex TAA, and +3 so that it stops at the end of the last A in TAA
        //prelimresult returns any substring that starts with ATG and ends with TAA
        // even if NOT a multiple of 3
        String prelimresult=dna.substring(startIndex, stopIndex+3);
        
        int prelimresultlength = prelimresult.length();
        
        //if the modulo of resultlength and 3 is 0, then print out the result
        if (prelimresultlength%3==0) {
            return dna.substring(startIndex, stopIndex+3);
            //System.out.println(result);
        } 
        else {
            return "";
               }
                
        
    }
    
  
    
    public void testSimpleGene() {
        String startCodon = "ATG";
        String stopCodon = "TAA";
        

        String i = "ATCTAACATC";
        String ii = "ATTATCATGTTA";
        String iii = "ATTAGTGTA";
        String iiii = "GAAATGGATAGTAA";
        String iiiii = "gatgctataat";
        
        System.out.println("The string is: " + i + ". The Gene is: " + findSimpleGene(i, startCodon,stopCodon));
        System.out.println("The string is: " + ii + ". The Gene is: " + findSimpleGene(ii, startCodon,stopCodon));
        System.out.println("The string is: " + iii + ". The Gene is: " + findSimpleGene(iii, startCodon,stopCodon));
        System.out.println("The string is: " + iiii + ". The Gene is: " + findSimpleGene(iiii, startCodon,stopCodon));
        System.out.println("The string is: " + iiiii + ". The Gene is: " + findSimpleGene(iiiii, startCodon,stopCodon));
    }
    

}
